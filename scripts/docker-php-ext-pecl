#!/bin/sh
set -e

# prefer user supplied CFLAGS, but default to our PHP_CFLAGS
: ${CFLAGS:=$PHP_CFLAGS}
: ${CPPFLAGS:=$PHP_CPPFLAGS}
: ${LDFLAGS:=$PHP_LDFLAGS}
export CFLAGS CPPFLAGS LDFLAGS

usage() {
    name_script=$(basename $0)
    echo "Installe PECL packages from source"
    echo
    echo "usage: ${name_script} command [pkg-name ...]"
    echo
    echo "COMMAND"
    echo "    help    ... Show this help"
    echo "    install ... Install package from source"
    echo
    echo "    ie: ${name_script} help"
    echo "        ${name_script} install yaml"
    echo "        ${name_script} install yaml xdebug"
    echo
}

# =============================================================================
#  Functions
# =============================================================================

function echoAsOneLine() {
    counter=0
    interval=100
    while read line; do
        if [ $((counter % interval)) -eq 0 ]; then
            printf '\r%*s\r' ${lenLine:-${#line}}
            printf "%s" "${line}"
            lenLine=${#line}
        fi
        counter=$((counter + 1))
    done
    printf '\r'
}

function extractSourcePHP() {
    docker-php-source extract
}

function installPhpizeDeps() {
    apkDel=
    if [ -n "$PHPIZE_DEPS" ]; then
        if apk info --installed .phpize-deps-configure >/dev/null; then
            apkDel='.phpize-deps-configure'
        elif ! apk info --installed .phpize-deps >/dev/null; then
            echo 'Installing virtually phpize deps.'
            apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS
            apkDel='.phpize-deps'
        fi
    fi
}

function installPkgPecl() {
    name_pkg=$1
    dir_pkg="/usr/src/php/php-src-master/ext/$name_pkg"
    cd /usr/src/php/php-src-master/ext
    echo '- Installing' $name_pkg 'PECL package from source ...'

    [ -d $dir_pkg ] || {
        mkdir -p "$dir_pkg"
    }
    echo '- Downloading archive of PECL package'
    curl -fsSL "https://pecl.php.net/get/$name_pkg" | tar xvz -C "$dir_pkg" --strip 1 &&
        echo '- Installing package from source' &&
        docker-php-ext-install $name_pkg

    return $?
}

# =============================================================================
#  Main
# =============================================================================

# Detect command
case "$1" in
    help)
        usage
        exit 0
        ;;

    install)
        shift
        ;;

    *)
        usage
        echo >&2 'Unknown command'
        exit 1
        ;;
esac

PHP_EXTENSION_DIR=$(php -r 'echo ini_get("extension_dir");')

srcExists=
if [ -d /usr/src/php ]; then
    echo '- Exracted PHP source found.'
    srcExists=1
fi

echo '- Extracting PHP source'
extractSourcePHP | echoAsOneLine &&
    echo '- PHP source extracted'

if [ -z "$srcExists" ]; then
    touch /usr/src/php/.docker-delete-me
fi

echo '- Installing dependencies to Phpize'
installPhpizeDeps | echoAsOneLine &&
    echo '- PHP deps installed'

sleep 5 # Avoid segmentation fault when 'pecl install' as possible

# Temp dir to extract source
dir="/usr/src/php/php-src-master/ext"
[ -d $dir ] || {
    echo >&2 'No extension directory found in extracted source directory.'
    exit 1
}

# Install each package
result=0
for OPT in "$@"; do
    installPkgPecl $OPT || {
        echo >&2 'Error while installing package'
        result=1
    }
    shift
done

if [ "$pm" = 'apk' ] && [ -n "$apkDel" ]; then
    apk del --no-network $apkDel &&
        echo 'Phpize dependencies deleted.'
fi

if [ -e /usr/src/php/.docker-delete-me ]; then
    docker-php-source prune &&
        echo 'PHP source dir deleted.'
fi

exit $result
